    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: odoo-openshift-mvilche
    labels:
      template: odoo-openshift-mvilche
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "odoo-openshift-mvilche"
      iconClass: "icon-github"
      description: >-
        ODOO - OPENSHIFT
        Martin Fabrizzio Vilche.
        https://github.com/mvilche.
      openshift.io/provider-display-name: "Martin Fabrizzio Vilche"
      openshift.io/documentation-url: "https://github.com/mvilche/odoo.git"
      openshift.io/support-url: "https://github.com/mvilche/odoo.git"
  message: >-
    Los servicios iniciar√°n en un par de minutos...
    Martin Fabrizzio Vilche        

  objects:


##################### odoo


  - apiVersion: v1
    data:
      odoo.cfg: |-
        [options]
        db_host=postgresql
        db_port=5432
        db_user=odoo
        db_password=odoo
        addons_path=/opt/odoo/addons,/opt/app/odoo/custom_addons
        data_dir=/opt/odoo/datadir
        xmlrpc_port=8070
    kind: ConfigMap
    metadata:
      name: odoo

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: odoo-community
      name: odoo
    spec:
      ports:
        - name: http
          port: 8070
          protocol: TCP
          targetPort: 8070
      selector:
        app: odoo-community
        deploymentconfig: odoo
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: odoo-community
      name: odoo
    spec:
      port:
        targetPort: http
      to:
        kind: Service
        name: odoo
        weight: 100
      wildcardPolicy: None




  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: odoo-community
      name: "odoo"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: odoo-community
        deploymentconfig: odoo
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: odoo-community
            deploymentconfig: odoo
        spec:
          containers:
            - env:
                - name: TIMEZONE
                  value: America/Montevideo
              image: "odoo:latest"
              imagePullPolicy: Always
              name: odoo
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8070
                  path: /
                timeoutSeconds: 15
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8070
                  path: /
                timeoutSeconds: 15              
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/odoo/server-config
                  name: odoo
                - mountPath: /opt/odoo/datadir
                  name: odoo-datadir
                  subPath: odoo-datadir
                - mountPath: /opt/odoo/custom_addons
                  name: odoo-datadir
                  subPath: custom-addons                  
              ports:
                - containerPort: 8070
                  protocol: TCP                  
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                name: odoo
              name: odoo
            - name: odoo-datadir
              persistentVolumeClaim:
                claimName: odoo-data          
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - odoo
            from:
              kind: ImageStreamTag
              name: "odoo:latest"
          type: ImageChange

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: odoo-community
      name: postgresql
    spec:
      replicas: 1
      selector:
        app: odoo-community
        deploymentconfig: postgresql
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: odoo-community
            deploymentconfig: postgresql
        spec:
          containers:
            - env:
                - name: POSTGRESQL_USER
                  value: odoo
                - name: POSTGRESQL_PASSWORD
                  value: odoo
                - name: POSTGRESQL_DATABASE
                  value: odoo
              image: postgresql:10
              imagePullPolicy: Always
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                  - /bin/sh
                  - -i
                  - -c
                  - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
                failureThreshold: 3
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 256Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: postgresql-1
                  subPath: postgresql
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgresql-1
              persistentVolumeClaim:
                claimName: odoo-data
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: 'postgresql:10'
          type: ImageChange



  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: odoo-community
      name: postgresql
    spec:
      ports:
        - name: tcp
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        app: odoo-community
        deploymentconfig: postgresql
      sessionAffinity: None
      type: ClusterIP



  - apiVersion: v1
    kind: ImageStream
    metadata:
        name: postgresql
    spec:
        tags:
          - name: '10'
            from:
                kind: DockerImage
                name: centos/postgresql-10-centos7:latest



  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: odoo-community
      name: odoo
    spec:
      completionDeadlineSeconds: 1800
      output:
        to:
          kind: ImageStreamTag
          name: odoo:latest
      source:
        contextDir: .
        git:
          ref: 11-openshift
          uri: 'https://github.com/mvilche/odoo.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
      triggers:
        - type: "ConfigChange"


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: odoo-community
      name: odoo
    spec: {}


  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      finalizers:
      - kubernetes.io/pvc-protection
      name: odoo-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi

